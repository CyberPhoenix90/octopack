"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
function tsconfigMappingGenerator(args) {
    return async (projects, context) => {
        let config;
        if (context.fileSystem.exists(path_1.join(context.workspaceRoot, 'tsconfig.json'))) {
            config = JSON.parse(await context.fileSystem.readFile(path_1.join(context.workspaceRoot, 'tsconfig.json'), 'utf8'));
        }
        else {
            config = {
                compilerOptions: {}
            };
        }
        config.compilerOptions.baseUrl = '.';
        config.compilerOptions.paths = {};
        for (const p of projects) {
            config.compilerOptions.paths[p.resolvedConfig.name] = [path_1.relative(context.workspaceRoot, p.path)];
        }
        await context.fileSystem.writeFile(path_1.join(context.workspaceRoot, 'tsconfig.json'), JSON.stringify(config, undefined, 4));
    };
}
exports.tsconfigMappingGenerator = tsconfigMappingGenerator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRzY29uZmlnX21hcHBpbmdfZ2VuZXJhdG9yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJ0c2NvbmZpZ19tYXBwaW5nX2dlbmVyYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHBhdGhfMSA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuZnVuY3Rpb24gdHNjb25maWdNYXBwaW5nR2VuZXJhdG9yKGFyZ3MpIHtcbiAgICByZXR1cm4gYXN5bmMgKHByb2plY3RzLCBjb250ZXh0KSA9PiB7XG4gICAgICAgIGxldCBjb25maWc7XG4gICAgICAgIGlmIChjb250ZXh0LmZpbGVTeXN0ZW0uZXhpc3RzKHBhdGhfMS5qb2luKGNvbnRleHQud29ya3NwYWNlUm9vdCwgJ3RzY29uZmlnLmpzb24nKSkpIHtcbiAgICAgICAgICAgIGNvbmZpZyA9IEpTT04ucGFyc2UoYXdhaXQgY29udGV4dC5maWxlU3lzdGVtLnJlYWRGaWxlKHBhdGhfMS5qb2luKGNvbnRleHQud29ya3NwYWNlUm9vdCwgJ3RzY29uZmlnLmpzb24nKSwgJ3V0ZjgnKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25maWcgPSB7XG4gICAgICAgICAgICAgICAgY29tcGlsZXJPcHRpb25zOiB7fVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBjb25maWcuY29tcGlsZXJPcHRpb25zLmJhc2VVcmwgPSAnLic7XG4gICAgICAgIGNvbmZpZy5jb21waWxlck9wdGlvbnMucGF0aHMgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBwIG9mIHByb2plY3RzKSB7XG4gICAgICAgICAgICBjb25maWcuY29tcGlsZXJPcHRpb25zLnBhdGhzW3AucmVzb2x2ZWRDb25maWcubmFtZV0gPSBbcGF0aF8xLnJlbGF0aXZlKGNvbnRleHQud29ya3NwYWNlUm9vdCwgcC5wYXRoKV07XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgY29udGV4dC5maWxlU3lzdGVtLndyaXRlRmlsZShwYXRoXzEuam9pbihjb250ZXh0LndvcmtzcGFjZVJvb3QsICd0c2NvbmZpZy5qc29uJyksIEpTT04uc3RyaW5naWZ5KGNvbmZpZywgdW5kZWZpbmVkLCA0KSk7XG4gICAgfTtcbn1cbmV4cG9ydHMudHNjb25maWdNYXBwaW5nR2VuZXJhdG9yID0gdHNjb25maWdNYXBwaW5nR2VuZXJhdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pZEhOamIyNW1hV2RmYldGd2NHbHVaMTluWlc1bGNtRjBiM0l1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SjBjMk52Ym1acFoxOXRZWEJ3YVc1blgyZGxibVZ5WVhSdmNpNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenRCUVVGQkxDdENRVUZ6UXp0QlFVTjBReXhUUVVGblFpeDNRa0ZCZDBJc1EwRkJReXhKUVVGSk8wbEJRM3BETEU5QlFVOHNTMEZCU3l4RlFVRkZMRkZCUVZFc1JVRkJSU3hQUVVGUExFVkJRVVVzUlVGQlJUdFJRVU12UWl4SlFVRkpMRTFCUVUwc1EwRkJRenRSUVVOWUxFbEJRVWtzVDBGQlR5eERRVUZETEZWQlFWVXNRMEZCUXl4TlFVRk5MRU5CUVVNc1YwRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eGhRVUZoTEVWQlFVVXNaVUZCWlN4RFFVRkRMRU5CUVVNc1JVRkJSVHRaUVVONlJTeE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFOUJRVThzUTBGQlF5eFZRVUZWTEVOQlFVTXNVVUZCVVN4RFFVRkRMRmRCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zWVVGQllTeEZRVUZGTEdWQlFXVXNRMEZCUXl4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRGFFZzdZVUZEU1R0WlFVTkVMRTFCUVUwc1IwRkJSenRuUWtGRFRDeGxRVUZsTEVWQlFVVXNSVUZCUlR0aFFVTjBRaXhEUVVGRE8xTkJRMHc3VVVGRFJDeE5RVUZOTEVOQlFVTXNaVUZCWlN4RFFVRkRMRTlCUVU4c1IwRkJSeXhIUVVGSExFTkJRVU03VVVGRGNrTXNUVUZCVFN4RFFVRkRMR1ZCUVdVc1EwRkJReXhMUVVGTExFZEJRVWNzUlVGQlJTeERRVUZETzFGQlEyeERMRXRCUVVzc1RVRkJUU3hEUVVGRExFbEJRVWtzVVVGQlVTeEZRVUZGTzFsQlEzUkNMRTFCUVUwc1EwRkJReXhsUVVGbExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4alFVRmpMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eGxRVUZSTEVOQlFVTXNUMEZCVHl4RFFVRkRMR0ZCUVdFc1JVRkJSU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0VFFVTnVSenRSUVVORUxFMUJRVTBzVDBGQlR5eERRVUZETEZWQlFWVXNRMEZCUXl4VFFVRlRMRU5CUVVNc1YwRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eGhRVUZoTEVWQlFVVXNaVUZCWlN4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVWQlFVVXNVMEZCVXl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03U1VGRE0wZ3NRMEZCUXl4RFFVRkRPMEZCUTA0c1EwRkJRenRCUVd4Q1JDdzBSRUZyUWtNaWZRPT0iXX0=