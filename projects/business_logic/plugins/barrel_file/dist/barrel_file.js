"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const static_analyser_1 = require("../../../../libraries/static_analyser");
function barrelFile(args) {
    return async (model, context) => {
        context.uiLogger.info(`[${model.project.resolvedConfig.name}]Generating barrel file`);
        const barrelFileContent = [];
        const optMode = 'out';
        const pragma = '@ignore';
        const fileSystem = context.fileSystem;
        const pathToBarrelFileFolder = path_1.join(model.project.path, 'src');
        const pathToBarrelFile = path_1.join(pathToBarrelFileFolder, 'index.ts');
        if (path_1.relative(model.project.path, pathToBarrelFile).startsWith('..')) {
            context.uiLogger.error('Barrel file would be outside of project. Not generating it.');
            return model;
        }
        for (const file of model.files) {
            const { fullPath, content } = file;
            if (fullPath === pathToBarrelFile) {
                continue;
            }
            let includesPragma = false;
            new static_analyser_1.FileManipulator(content).forEachComment((c) => {
                if (c.includes(pragma)) {
                    includesPragma = true;
                }
                return undefined;
            });
            if (([
                fullPath.endsWith('.ts'),
                fullPath.endsWith('.tsx'),
                fullPath.endsWith('.js'),
                fullPath.endsWith('.jsx')
            ].some((c) => c) &&
                optMode === 'in' &&
                includesPragma) ||
                (optMode === 'out' && !includesPragma)) {
                const parsedExportPath = path_1.parse(path_1.relative(pathToBarrelFileFolder, file.fullPath));
                let exportPath = path_1.join(parsedExportPath.dir, parsedExportPath.name);
                if (!exportPath.startsWith(`.${path_1.sep}`)) {
                    exportPath = `.${path_1.sep}${exportPath}`;
                }
                barrelFileContent.push(`export * from '${exportPath}';\n`);
            }
        }
        if (barrelFileContent.length) {
            fileSystem.writeFileSync(pathToBarrelFile, barrelFileContent.join(''));
            // model.files.push({
            // 	fullPath: pathToBarrelFile,
            // 	parent: undefined,
            // 	type: FileSystemEntryType.FILE,
            // 	content: barrelFileContent.join('')
            // });
        }
        return model;
    };
}
exports.barrelFile = barrelFile;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFycmVsX2ZpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJiYXJyZWxfZmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRWxELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUV4RSxNQUFNLFVBQVUsVUFBVSxDQUFDLElBQWtCO0lBQzVDLE9BQU8sS0FBSyxFQUFFLEtBQXVCLEVBQUUsT0FBc0IsRUFBRSxFQUFFO1FBQ2hFLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSx5QkFBeUIsQ0FBQyxDQUFDO1FBRXRGLE1BQU0saUJBQWlCLEdBQWEsRUFBRSxDQUFDO1FBRXZDLE1BQU0sT0FBTyxHQUFXLEtBQUssQ0FBQztRQUM5QixNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUM7UUFDekIsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUV0QyxNQUFNLHNCQUFzQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvRCxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNsRSxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNwRSxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyw2REFBNkQsQ0FBQyxDQUFDO1lBQ3RGLE9BQU8sS0FBSyxDQUFDO1NBQ2I7UUFFRCxLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssQ0FBQyxLQUFLLEVBQUU7WUFDL0IsTUFBTSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUM7WUFFbkMsSUFBSSxRQUFRLEtBQUssZ0JBQWdCLEVBQUU7Z0JBQ2xDLFNBQVM7YUFDVDtZQUVELElBQUksY0FBYyxHQUFHLEtBQUssQ0FBQztZQUMzQixJQUFJLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRTtnQkFDakQsSUFBSSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxFQUFFO29CQUN2QixjQUFjLEdBQUcsSUFBSSxDQUFDO2lCQUN0QjtnQkFDRCxPQUFPLFNBQVMsQ0FBQztZQUNsQixDQUFDLENBQUMsQ0FBQztZQUVILElBQ0MsQ0FBQztnQkFDQSxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztnQkFDeEIsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7Z0JBQ3pCLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO2dCQUN4QixRQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQzthQUN6QixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNmLE9BQU8sS0FBSyxJQUFJO2dCQUNoQixjQUFjLENBQUM7Z0JBQ2hCLENBQUMsT0FBTyxLQUFLLEtBQUssSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUNyQztnQkFDRCxNQUFNLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hGLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ25FLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsRUFBRTtvQkFDdEMsVUFBVSxHQUFHLElBQUksR0FBRyxHQUFHLFVBQVUsRUFBRSxDQUFDO2lCQUNwQztnQkFFRCxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLFVBQVUsTUFBTSxDQUFDLENBQUM7YUFDM0Q7U0FDRDtRQUVELElBQUksaUJBQWlCLENBQUMsTUFBTSxFQUFFO1lBQzdCLFVBQVUsQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDdkUscUJBQXFCO1lBQ3JCLCtCQUErQjtZQUMvQixzQkFBc0I7WUFDdEIsbUNBQW1DO1lBQ25DLHVDQUF1QztZQUN2QyxNQUFNO1NBQ047UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUMsQ0FBQztBQUNILENBQUMifQ==
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFycmVsX2ZpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJiYXJyZWxfZmlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFrRDtBQUNsRCwyRUFBd0U7QUFDeEUsU0FBZ0IsVUFBVSxDQUFDLElBQUk7SUFDM0IsT0FBTyxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxFQUFFO1FBQzVCLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSx5QkFBeUIsQ0FBQyxDQUFDO1FBQ3RGLE1BQU0saUJBQWlCLEdBQUcsRUFBRSxDQUFDO1FBQzdCLE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQztRQUN0QixNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUM7UUFDekIsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUN0QyxNQUFNLHNCQUFzQixHQUFHLFdBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvRCxNQUFNLGdCQUFnQixHQUFHLFdBQUksQ0FBQyxzQkFBc0IsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNsRSxJQUFJLGVBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNqRSxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyw2REFBNkQsQ0FBQyxDQUFDO1lBQ3RGLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLENBQUMsS0FBSyxFQUFFO1lBQzVCLE1BQU0sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDO1lBQ25DLElBQUksUUFBUSxLQUFLLGdCQUFnQixFQUFFO2dCQUMvQixTQUFTO2FBQ1o7WUFDRCxJQUFJLGNBQWMsR0FBRyxLQUFLLENBQUM7WUFDM0IsSUFBSSxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO2dCQUM5QyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7b0JBQ3BCLGNBQWMsR0FBRyxJQUFJLENBQUM7aUJBQ3pCO2dCQUNELE9BQU8sU0FBUyxDQUFDO1lBQ3JCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDO2dCQUNELFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO2dCQUN4QixRQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQztnQkFDekIsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7Z0JBQ3hCLFFBQVEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO2FBQzVCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ1osT0FBTyxLQUFLLElBQUk7Z0JBQ2hCLGNBQWMsQ0FBQztnQkFDZixDQUFDLE9BQU8sS0FBSyxLQUFLLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRTtnQkFDeEMsTUFBTSxnQkFBZ0IsR0FBRyxZQUFLLENBQUMsZUFBUSxDQUFDLHNCQUFzQixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUNoRixJQUFJLFVBQVUsR0FBRyxXQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNuRSxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxJQUFJLFVBQUcsRUFBRSxDQUFDLEVBQUU7b0JBQ25DLFVBQVUsR0FBRyxJQUFJLFVBQUcsR0FBRyxVQUFVLEVBQUUsQ0FBQztpQkFDdkM7Z0JBQ0QsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGtCQUFrQixVQUFVLE1BQU0sQ0FBQyxDQUFDO2FBQzlEO1NBQ0o7UUFDRCxJQUFJLGlCQUFpQixDQUFDLE1BQU0sRUFBRTtZQUMxQixVQUFVLENBQUMsYUFBYSxDQUFDLGdCQUFnQixFQUFFLGlCQUFpQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3ZFLHFCQUFxQjtZQUNyQiwrQkFBK0I7WUFDL0Isc0JBQXNCO1lBQ3RCLG1DQUFtQztZQUNuQyx1Q0FBdUM7WUFDdkMsTUFBTTtTQUNUO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQyxDQUFDO0FBQ04sQ0FBQztBQXJERCxnQ0FxREM7QUFDRCxreUZBQWt5RiJ9