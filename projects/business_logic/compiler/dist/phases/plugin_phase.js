"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const plugin_loader_1 = require("plugin_loader");
async function pluginBasedChainedPhase(phases, model, context) {
    var _a, _b;
    for (const projectData of model.projectsBuildData) {
        for (const phase of phases) {
            const phaseName = typeof phase === 'string' ? phase : phase.name;
            const defaultPlugins = typeof phase === 'string' ? [] : phase.defaultPlugins;
            const phasePlugins = projectData.project.resolvedConfig.build.bundles[projectData.bundle].compilation[phaseName];
            context.devLogger.info(`Starting Phase ${phaseName} for ${projectData.project.resolvedConfig.name}`);
            for (const plugin of [...(phasePlugins || []), ...defaultPlugins]) {
                context.devLogger.debug(
                //@ts-ignore
                `Running plugin ${_b = (_a = plugin) === null || _a === void 0 ? void 0 : _a.name, (_b !== null && _b !== void 0 ? _b : plugin)} for ${projectData.project.resolvedConfig.name}`);
                const run = await plugin_loader_1.loadBuildPlugin(plugin);
                await run(projectData, context);
            }
        }
    }
    return model;
}
exports.pluginBasedChainedPhase = pluginBasedChainedPhase;
async function pluginBasedPhase(name, model, context) {
    return pluginBasedChainedPhase([name], model, context);
}
exports.pluginBasedPhase = pluginBasedPhase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbl9waGFzZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJwbHVnaW5fcGhhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBwbHVnaW5fbG9hZGVyXzEgPSByZXF1aXJlKFwicGx1Z2luX2xvYWRlclwiKTtcbmFzeW5jIGZ1bmN0aW9uIHBsdWdpbkJhc2VkQ2hhaW5lZFBoYXNlKHBoYXNlcywgbW9kZWwsIGNvbnRleHQpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGZvciAoY29uc3QgcHJvamVjdERhdGEgb2YgbW9kZWwucHJvamVjdHNCdWlsZERhdGEpIHtcbiAgICAgICAgZm9yIChjb25zdCBwaGFzZSBvZiBwaGFzZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHBoYXNlTmFtZSA9IHR5cGVvZiBwaGFzZSA9PT0gJ3N0cmluZycgPyBwaGFzZSA6IHBoYXNlLm5hbWU7XG4gICAgICAgICAgICBjb25zdCBkZWZhdWx0UGx1Z2lucyA9IHR5cGVvZiBwaGFzZSA9PT0gJ3N0cmluZycgPyBbXSA6IHBoYXNlLmRlZmF1bHRQbHVnaW5zO1xuICAgICAgICAgICAgY29uc3QgcGhhc2VQbHVnaW5zID0gcHJvamVjdERhdGEucHJvamVjdC5yZXNvbHZlZENvbmZpZy5idWlsZC5idW5kbGVzW3Byb2plY3REYXRhLmJ1bmRsZV0uY29tcGlsYXRpb25bcGhhc2VOYW1lXTtcbiAgICAgICAgICAgIGNvbnRleHQuZGV2TG9nZ2VyLmluZm8oYFN0YXJ0aW5nIFBoYXNlICR7cGhhc2VOYW1lfSBmb3IgJHtwcm9qZWN0RGF0YS5wcm9qZWN0LnJlc29sdmVkQ29uZmlnLm5hbWV9YCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHBsdWdpbiBvZiBbLi4uKHBoYXNlUGx1Z2lucyB8fCBbXSksIC4uLmRlZmF1bHRQbHVnaW5zXSkge1xuICAgICAgICAgICAgICAgIGNvbnRleHQuZGV2TG9nZ2VyLmRlYnVnKFxuICAgICAgICAgICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgIGBSdW5uaW5nIHBsdWdpbiAke19iID0gKF9hID0gcGx1Z2luKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubmFtZSwgKF9iICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHBsdWdpbil9IGZvciAke3Byb2plY3REYXRhLnByb2plY3QucmVzb2x2ZWRDb25maWcubmFtZX1gKTtcbiAgICAgICAgICAgICAgICBjb25zdCBydW4gPSBhd2FpdCBwbHVnaW5fbG9hZGVyXzEubG9hZEJ1aWxkUGx1Z2luKHBsdWdpbik7XG4gICAgICAgICAgICAgICAgYXdhaXQgcnVuKHByb2plY3REYXRhLCBjb250ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbW9kZWw7XG59XG5leHBvcnRzLnBsdWdpbkJhc2VkQ2hhaW5lZFBoYXNlID0gcGx1Z2luQmFzZWRDaGFpbmVkUGhhc2U7XG5hc3luYyBmdW5jdGlvbiBwbHVnaW5CYXNlZFBoYXNlKG5hbWUsIG1vZGVsLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIHBsdWdpbkJhc2VkQ2hhaW5lZFBoYXNlKFtuYW1lXSwgbW9kZWwsIGNvbnRleHQpO1xufVxuZXhwb3J0cy5wbHVnaW5CYXNlZFBoYXNlID0gcGx1Z2luQmFzZWRQaGFzZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWNHeDFaMmx1WDNCb1lYTmxMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaWNHeDFaMmx1WDNCb1lYTmxMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3TzBGQlFVRXNhVVJCUVdkRU8wRkJRM3BETEV0QlFVc3NWVUZCVlN4MVFrRkJkVUlzUTBGQlF5eE5RVUZOTEVWQlFVVXNTMEZCU3l4RlFVRkZMRTlCUVU4N1NVRkRhRVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNSVUZCUlN4RFFVRkRPMGxCUTFnc1MwRkJTeXhOUVVGTkxGZEJRVmNzU1VGQlNTeExRVUZMTEVOQlFVTXNhVUpCUVdsQ0xFVkJRVVU3VVVGREwwTXNTMEZCU3l4TlFVRk5MRXRCUVVzc1NVRkJTU3hOUVVGTkxFVkJRVVU3V1VGRGVFSXNUVUZCVFN4VFFVRlRMRWRCUVVjc1QwRkJUeXhMUVVGTExFdEJRVXNzVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTTdXVUZEYWtVc1RVRkJUU3hqUVVGakxFZEJRVWNzVDBGQlR5eExRVUZMTEV0QlFVc3NVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4alFVRmpMRU5CUVVNN1dVRkROMFVzVFVGQlRTeFpRVUZaTEVkQlFVY3NWMEZCVnl4RFFVRkRMRTlCUVU4c1EwRkJReXhqUVVGakxFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4WFFVRlhMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMWxCUTJwSUxFOUJRVThzUTBGQlF5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRMR3RDUVVGclFpeFRRVUZUTEZGQlFWRXNWMEZCVnl4RFFVRkRMRTlCUVU4c1EwRkJReXhqUVVGakxFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTXNRMEZCUXp0WlFVTnlSeXhMUVVGTExFMUJRVTBzVFVGQlRTeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRmxCUVZrc1NVRkJTU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEdOQlFXTXNRMEZCUXl4RlFVRkZPMmRDUVVNdlJDeFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRMRXRCUVVzN1owSkJRM1pDTEZsQlFWazdaMEpCUTFvc2EwSkJRV3RDTEVWQlFVVXNSMEZCUnl4RFFVRkRMRVZCUVVVc1IwRkJSeXhOUVVGTkxFTkJRVU1zUzBGQlN5eEpRVUZKTEVsQlFVa3NSVUZCUlN4TFFVRkxMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETEVWQlFVVXNTMEZCU3l4SlFVRkpMRWxCUVVrc1JVRkJSU3hMUVVGTExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eFJRVUZSTEZkQlFWY3NRMEZCUXl4UFFVRlBMRU5CUVVNc1kwRkJZeXhEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETEVOQlFVTTdaMEpCUTJ4TUxFMUJRVTBzUjBGQlJ5eEhRVUZITEUxQlFVMHNLMEpCUVdVc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dG5Ra0ZETVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zVjBGQlZ5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPMkZCUTI1RE8xTkJRMG83UzBGRFNqdEpRVU5FTEU5QlFVOHNTMEZCU3l4RFFVRkRPMEZCUTJwQ0xFTkJRVU03UVVGc1FrUXNNRVJCYTBKRE8wRkJRMDBzUzBGQlN5eFZRVUZWTEdkQ1FVRm5RaXhEUVVGRExFbEJRVWtzUlVGQlJTeExRVUZMTEVWQlFVVXNUMEZCVHp0SlFVTjJSQ3hQUVVGUExIVkNRVUYxUWl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUzBGQlN5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPMEZCUXpORUxFTkJRVU03UVVGR1JDdzBRMEZGUXlKOSJdfQ==