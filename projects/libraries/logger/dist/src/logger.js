"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const log_level_1 = require("./log/log_level");
class Logger {
    constructor(configuration) {
        this.configuration = configuration;
    }
    info(logData) {
        this.log(logData, log_level_1.LogLevel.INFO);
    }
    debug(logData) {
        this.log(logData, log_level_1.LogLevel.DEBUG);
    }
    warn(logData) {
        this.log(logData, log_level_1.LogLevel.WARN);
    }
    error(logData) {
        this.log(logData, log_level_1.LogLevel.ERROR);
    }
    log(logData, logLevel) {
        const { enhancers = [], adapters } = this.configuration;
        if (!adapters.length) {
            return;
        }
        let log = this.createLog(logData, logLevel);
        for (const enhancer of enhancers) {
            log = enhancer.enhance(log);
            if (!log) {
                return;
            }
        }
        for (const adapter of adapters) {
            adapter.log(log);
        }
    }
    addAdapter(adapter) {
        this.configuration.adapters.push(adapter);
    }
    createLog(logData, logLevel) {
        let text = '';
        let object;
        if (typeof logData === 'string') {
            text = logData;
        }
        else {
            object = logData;
        }
        return { logLevel, object, text };
    }
}
exports.Logger = Logger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJsb2dnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBsb2dfbGV2ZWxfMSA9IHJlcXVpcmUoXCIuL2xvZy9sb2dfbGV2ZWxcIik7XG5jbGFzcyBMb2dnZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3VyYXRpb24pIHtcbiAgICAgICAgdGhpcy5jb25maWd1cmF0aW9uID0gY29uZmlndXJhdGlvbjtcbiAgICB9XG4gICAgaW5mbyhsb2dEYXRhKSB7XG4gICAgICAgIHRoaXMubG9nKGxvZ0RhdGEsIGxvZ19sZXZlbF8xLkxvZ0xldmVsLklORk8pO1xuICAgIH1cbiAgICBkZWJ1Zyhsb2dEYXRhKSB7XG4gICAgICAgIHRoaXMubG9nKGxvZ0RhdGEsIGxvZ19sZXZlbF8xLkxvZ0xldmVsLkRFQlVHKTtcbiAgICB9XG4gICAgd2Fybihsb2dEYXRhKSB7XG4gICAgICAgIHRoaXMubG9nKGxvZ0RhdGEsIGxvZ19sZXZlbF8xLkxvZ0xldmVsLldBUk4pO1xuICAgIH1cbiAgICBlcnJvcihsb2dEYXRhKSB7XG4gICAgICAgIHRoaXMubG9nKGxvZ0RhdGEsIGxvZ19sZXZlbF8xLkxvZ0xldmVsLkVSUk9SKTtcbiAgICB9XG4gICAgbG9nKGxvZ0RhdGEsIGxvZ0xldmVsKSB7XG4gICAgICAgIGNvbnN0IHsgZW5oYW5jZXJzID0gW10sIGFkYXB0ZXJzIH0gPSB0aGlzLmNvbmZpZ3VyYXRpb247XG4gICAgICAgIGlmICghYWRhcHRlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGxvZyA9IHRoaXMuY3JlYXRlTG9nKGxvZ0RhdGEsIGxvZ0xldmVsKTtcbiAgICAgICAgZm9yIChjb25zdCBlbmhhbmNlciBvZiBlbmhhbmNlcnMpIHtcbiAgICAgICAgICAgIGxvZyA9IGVuaGFuY2VyLmVuaGFuY2UobG9nKTtcbiAgICAgICAgICAgIGlmICghbG9nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgYWRhcHRlciBvZiBhZGFwdGVycykge1xuICAgICAgICAgICAgYWRhcHRlci5sb2cobG9nKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhZGRBZGFwdGVyKGFkYXB0ZXIpIHtcbiAgICAgICAgdGhpcy5jb25maWd1cmF0aW9uLmFkYXB0ZXJzLnB1c2goYWRhcHRlcik7XG4gICAgfVxuICAgIGNyZWF0ZUxvZyhsb2dEYXRhLCBsb2dMZXZlbCkge1xuICAgICAgICBsZXQgdGV4dCA9ICcnO1xuICAgICAgICBsZXQgb2JqZWN0O1xuICAgICAgICBpZiAodHlwZW9mIGxvZ0RhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0ZXh0ID0gbG9nRGF0YTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG9iamVjdCA9IGxvZ0RhdGE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgbG9nTGV2ZWwsIG9iamVjdCwgdGV4dCB9O1xuICAgIH1cbn1cbmV4cG9ydHMuTG9nZ2VyID0gTG9nZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYkc5bloyVnlMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaWJHOW5aMlZ5TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN08wRkJRVUVzSzBOQlFUSkRPMEZCUXpORExFMUJRV0VzVFVGQlRUdEpRVU5tTEZsQlFWa3NZVUZCWVR0UlFVTnlRaXhKUVVGSkxFTkJRVU1zWVVGQllTeEhRVUZITEdGQlFXRXNRMEZCUXp0SlFVTjJReXhEUVVGRE8wbEJRMFFzU1VGQlNTeERRVUZETEU5QlFVODdVVUZEVWl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFOUJRVThzUlVGQlJTeHZRa0ZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wbEJRM0pETEVOQlFVTTdTVUZEUkN4TFFVRkxMRU5CUVVNc1QwRkJUenRSUVVOVUxFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNUMEZCVHl4RlFVRkZMRzlDUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdTVUZEZEVNc1EwRkJRenRKUVVORUxFbEJRVWtzUTBGQlF5eFBRVUZQTzFGQlExSXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhQUVVGUExFVkJRVVVzYjBKQlFWRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRKUVVOeVF5eERRVUZETzBsQlEwUXNTMEZCU3l4RFFVRkRMRTlCUVU4N1VVRkRWQ3hKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEU5QlFVOHNSVUZCUlN4dlFrRkJVU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzBsQlEzUkRMRU5CUVVNN1NVRkRSQ3hIUVVGSExFTkJRVU1zVDBGQlR5eEZRVUZGTEZGQlFWRTdVVUZEYWtJc1RVRkJUU3hGUVVGRkxGTkJRVk1zUjBGQlJ5eEZRVUZGTEVWQlFVVXNVVUZCVVN4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGRExHRkJRV0VzUTBGQlF6dFJRVU40UkN4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFMUJRVTBzUlVGQlJUdFpRVU5zUWl4UFFVRlBPMU5CUTFZN1VVRkRSQ3hKUVVGSkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRTlCUVU4c1JVRkJSU3hSUVVGUkxFTkJRVU1zUTBGQlF6dFJRVU0xUXl4TFFVRkxMRTFCUVUwc1VVRkJVU3hKUVVGSkxGTkJRVk1zUlVGQlJUdFpRVU01UWl4SFFVRkhMRWRCUVVjc1VVRkJVU3hEUVVGRExFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVTTFRaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTzJkQ1FVTk9MRTlCUVU4N1lVRkRWanRUUVVOS08xRkJRMFFzUzBGQlN5eE5RVUZOTEU5QlFVOHNTVUZCU1N4UlFVRlJMRVZCUVVVN1dVRkROVUlzVDBGQlR5eERRVUZETEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRUUVVOd1FqdEpRVU5NTEVOQlFVTTdTVUZEUkN4VlFVRlZMRU5CUVVNc1QwRkJUenRSUVVOa0xFbEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dEpRVU01UXl4RFFVRkRPMGxCUTBRc1UwRkJVeXhEUVVGRExFOUJRVThzUlVGQlJTeFJRVUZSTzFGQlEzWkNMRWxCUVVrc1NVRkJTU3hIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU5rTEVsQlFVa3NUVUZCVFN4RFFVRkRPMUZCUTFnc1NVRkJTU3hQUVVGUExFOUJRVThzUzBGQlN5eFJRVUZSTEVWQlFVVTdXVUZETjBJc1NVRkJTU3hIUVVGSExFOUJRVThzUTBGQlF6dFRRVU5zUWp0aFFVTkpPMWxCUTBRc1RVRkJUU3hIUVVGSExFOUJRVThzUTBGQlF6dFRRVU53UWp0UlFVTkVMRTlCUVU4c1JVRkJSU3hSUVVGUkxFVkJRVVVzVFVGQlRTeEZRVUZGTEVsQlFVa3NSVUZCUlN4RFFVRkRPMGxCUTNSRExFTkJRVU03UTBGRFNqdEJRVGxEUkN4M1FrRTRRME1pZlE9PSJdfQ==