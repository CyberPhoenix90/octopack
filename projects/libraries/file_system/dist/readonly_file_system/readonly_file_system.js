"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const file_system_1 = require("../file_system");
class ReadonlyFileSystem extends file_system_1.FileSystem {
    constructor(sourceFileSystem) {
        super();
        this.fileSystem = sourceFileSystem;
    }
    watch(paths, options, callback) {
        return this.fileSystem.watch(paths, options, callback);
    }
    watchSync(paths, options, callback) {
        return this.fileSystem.watchSync(paths, options, callback);
    }
    readlink(path) {
        return this.fileSystem.readlink(path);
    }
    readlinkSync(path) {
        return this.fileSystem.readlinkSync(path);
    }
    realpath(path) {
        return this.fileSystem.realpath(path);
    }
    realpathSync(path) {
        return this.fileSystem.realpathSync(path);
    }
    async mkdir(path) {
        throw new Error('This file system is read only');
    }
    mkdirSync(path) {
        throw new Error('This file system is read only');
    }
    async rmdir(path) {
        throw new Error('This file system is read only');
    }
    rmdirSync(path) {
        throw new Error('This file system is read only');
    }
    async unlink(path) {
        throw new Error('This file system is read only');
    }
    unlinkSync(path) {
        throw new Error('This file system is read only');
    }
    async readFile(path, encoding) {
        return this.fileSystem.readFile(path, encoding);
    }
    readFileSync(path, encoding) {
        return this.fileSystem.readFileSync(path, encoding);
    }
    async stat(path) {
        return this.fileSystem.stat(path);
    }
    statSync(path) {
        return this.fileSystem.statSync(path);
    }
    async readDir(path) {
        return this.fileSystem.readDir(path);
    }
    readDirSync(path) {
        return this.fileSystem.readDirSync(path);
    }
    async exists(path) {
        return this.fileSystem.exists(path);
    }
    existsSync(path) {
        return this.fileSystem.existsSync(path);
    }
    async writeFile(path, content) {
        throw new Error('This file system is read only');
    }
    writeFileSync(path, content) {
        throw new Error('This file system is read only');
    }
}
exports.ReadonlyFileSystem = ReadonlyFileSystem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRvbmx5X2ZpbGVfc3lzdGVtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoicmVhZG9ubHlfZmlsZV9zeXN0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBmaWxlX3N5c3RlbV8xID0gcmVxdWlyZShcIi4uL2ZpbGVfc3lzdGVtXCIpO1xuY2xhc3MgUmVhZG9ubHlGaWxlU3lzdGVtIGV4dGVuZHMgZmlsZV9zeXN0ZW1fMS5GaWxlU3lzdGVtIHtcbiAgICBjb25zdHJ1Y3Rvcihzb3VyY2VGaWxlU3lzdGVtKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuZmlsZVN5c3RlbSA9IHNvdXJjZUZpbGVTeXN0ZW07XG4gICAgfVxuICAgIHdhdGNoKHBhdGhzLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlU3lzdGVtLndhdGNoKHBhdGhzLCBvcHRpb25zLCBjYWxsYmFjayk7XG4gICAgfVxuICAgIHdhdGNoU3luYyhwYXRocywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZVN5c3RlbS53YXRjaFN5bmMocGF0aHMsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICB9XG4gICAgcmVhZGxpbmsocGF0aCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlU3lzdGVtLnJlYWRsaW5rKHBhdGgpO1xuICAgIH1cbiAgICByZWFkbGlua1N5bmMocGF0aCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlU3lzdGVtLnJlYWRsaW5rU3luYyhwYXRoKTtcbiAgICB9XG4gICAgcmVhbHBhdGgocGF0aCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlU3lzdGVtLnJlYWxwYXRoKHBhdGgpO1xuICAgIH1cbiAgICByZWFscGF0aFN5bmMocGF0aCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlU3lzdGVtLnJlYWxwYXRoU3luYyhwYXRoKTtcbiAgICB9XG4gICAgYXN5bmMgbWtkaXIocGF0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgZmlsZSBzeXN0ZW0gaXMgcmVhZCBvbmx5Jyk7XG4gICAgfVxuICAgIG1rZGlyU3luYyhwYXRoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhpcyBmaWxlIHN5c3RlbSBpcyByZWFkIG9ubHknKTtcbiAgICB9XG4gICAgYXN5bmMgcm1kaXIocGF0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgZmlsZSBzeXN0ZW0gaXMgcmVhZCBvbmx5Jyk7XG4gICAgfVxuICAgIHJtZGlyU3luYyhwYXRoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhpcyBmaWxlIHN5c3RlbSBpcyByZWFkIG9ubHknKTtcbiAgICB9XG4gICAgYXN5bmMgdW5saW5rKHBhdGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGlzIGZpbGUgc3lzdGVtIGlzIHJlYWQgb25seScpO1xuICAgIH1cbiAgICB1bmxpbmtTeW5jKHBhdGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGlzIGZpbGUgc3lzdGVtIGlzIHJlYWQgb25seScpO1xuICAgIH1cbiAgICBhc3luYyByZWFkRmlsZShwYXRoLCBlbmNvZGluZykge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlU3lzdGVtLnJlYWRGaWxlKHBhdGgsIGVuY29kaW5nKTtcbiAgICB9XG4gICAgcmVhZEZpbGVTeW5jKHBhdGgsIGVuY29kaW5nKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVTeXN0ZW0ucmVhZEZpbGVTeW5jKHBhdGgsIGVuY29kaW5nKTtcbiAgICB9XG4gICAgYXN5bmMgc3RhdChwYXRoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVTeXN0ZW0uc3RhdChwYXRoKTtcbiAgICB9XG4gICAgc3RhdFN5bmMocGF0aCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWxlU3lzdGVtLnN0YXRTeW5jKHBhdGgpO1xuICAgIH1cbiAgICBhc3luYyByZWFkRGlyKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZVN5c3RlbS5yZWFkRGlyKHBhdGgpO1xuICAgIH1cbiAgICByZWFkRGlyU3luYyhwYXRoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVTeXN0ZW0ucmVhZERpclN5bmMocGF0aCk7XG4gICAgfVxuICAgIGFzeW5jIGV4aXN0cyhwYXRoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGVTeXN0ZW0uZXhpc3RzKHBhdGgpO1xuICAgIH1cbiAgICBleGlzdHNTeW5jKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZVN5c3RlbS5leGlzdHNTeW5jKHBhdGgpO1xuICAgIH1cbiAgICBhc3luYyB3cml0ZUZpbGUocGF0aCwgY29udGVudCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgZmlsZSBzeXN0ZW0gaXMgcmVhZCBvbmx5Jyk7XG4gICAgfVxuICAgIHdyaXRlRmlsZVN5bmMocGF0aCwgY29udGVudCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgZmlsZSBzeXN0ZW0gaXMgcmVhZCBvbmx5Jyk7XG4gICAgfVxufVxuZXhwb3J0cy5SZWFkb25seUZpbGVTeXN0ZW0gPSBSZWFkb25seUZpbGVTeXN0ZW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljbVZoWkc5dWJIbGZabWxzWlY5emVYTjBaVzB1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SnlaV0ZrYjI1c2VWOW1hV3hsWDNONWMzUmxiUzVxY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3p0QlFVRkJMR2RFUVVFMFF6dEJRVU0xUXl4TlFVRmhMR3RDUVVGdFFpeFRRVUZSTEhkQ1FVRlZPMGxCUXpsRExGbEJRVmtzWjBKQlFXZENPMUZCUTNoQ0xFdEJRVXNzUlVGQlJTeERRVUZETzFGQlExSXNTVUZCU1N4RFFVRkRMRlZCUVZVc1IwRkJSeXhuUWtGQlowSXNRMEZCUXp0SlFVTjJReXhEUVVGRE8wbEJRMFFzUzBGQlN5eERRVUZETEV0QlFVc3NSVUZCUlN4UFFVRlBMRVZCUVVVc1VVRkJVVHRSUVVNeFFpeFBRVUZQTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUlVGQlJTeFBRVUZQTEVWQlFVVXNVVUZCVVN4RFFVRkRMRU5CUVVNN1NVRkRNMFFzUTBGQlF6dEpRVU5FTEZOQlFWTXNRMEZCUXl4TFFVRkxMRVZCUVVVc1QwRkJUeXhGUVVGRkxGRkJRVkU3VVVGRE9VSXNUMEZCVHl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExGTkJRVk1zUTBGQlF5eExRVUZMTEVWQlFVVXNUMEZCVHl4RlFVRkZMRkZCUVZFc1EwRkJReXhEUVVGRE8wbEJReTlFTEVOQlFVTTdTVUZEUkN4UlFVRlJMRU5CUVVNc1NVRkJTVHRSUVVOVUxFOUJRVThzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03U1VGRE1VTXNRMEZCUXp0SlFVTkVMRmxCUVZrc1EwRkJReXhKUVVGSk8xRkJRMklzVDBGQlR5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRmxCUVZrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dEpRVU01UXl4RFFVRkRPMGxCUTBRc1VVRkJVU3hEUVVGRExFbEJRVWs3VVVGRFZDeFBRVUZQTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzBsQlF6RkRMRU5CUVVNN1NVRkRSQ3haUVVGWkxFTkJRVU1zU1VGQlNUdFJRVU5pTEU5QlFVOHNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhaUVVGWkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTVUZET1VNc1EwRkJRenRKUVVORUxFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1R0UlFVTmFMRTFCUVUwc1NVRkJTU3hMUVVGTExFTkJRVU1zSzBKQlFTdENMRU5CUVVNc1EwRkJRenRKUVVOeVJDeERRVUZETzBsQlEwUXNVMEZCVXl4RFFVRkRMRWxCUVVrN1VVRkRWaXhOUVVGTkxFbEJRVWtzUzBGQlN5eERRVUZETEN0Q1FVRXJRaXhEUVVGRExFTkJRVU03U1VGRGNrUXNRMEZCUXp0SlFVTkVMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNUdFJRVU5hTEUxQlFVMHNTVUZCU1N4TFFVRkxMRU5CUVVNc0swSkJRU3RDTEVOQlFVTXNRMEZCUXp0SlFVTnlSQ3hEUVVGRE8wbEJRMFFzVTBGQlV5eERRVUZETEVsQlFVazdVVUZEVml4TlFVRk5MRWxCUVVrc1MwRkJTeXhEUVVGRExDdENRVUVyUWl4RFFVRkRMRU5CUVVNN1NVRkRja1FzUTBGQlF6dEpRVU5FTEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTVHRSUVVOaUxFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNLMEpCUVN0Q0xFTkJRVU1zUTBGQlF6dEpRVU55UkN4RFFVRkRPMGxCUTBRc1ZVRkJWU3hEUVVGRExFbEJRVWs3VVVGRFdDeE5RVUZOTEVsQlFVa3NTMEZCU3l4RFFVRkRMQ3RDUVVFclFpeERRVUZETEVOQlFVTTdTVUZEY2tRc1EwRkJRenRKUVVORUxFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RlFVRkZMRkZCUVZFN1VVRkRla0lzVDBGQlR5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFVkJRVVVzVVVGQlVTeERRVUZETEVOQlFVTTdTVUZEY0VRc1EwRkJRenRKUVVORUxGbEJRVmtzUTBGQlF5eEpRVUZKTEVWQlFVVXNVVUZCVVR0UlFVTjJRaXhQUVVGUExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNXVUZCV1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hSUVVGUkxFTkJRVU1zUTBGQlF6dEpRVU40UkN4RFFVRkRPMGxCUTBRc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTzFGQlExZ3NUMEZCVHl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SlFVTjBReXhEUVVGRE8wbEJRMFFzVVVGQlVTeERRVUZETEVsQlFVazdVVUZEVkN4UFFVRlBMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMGxCUXpGRExFTkJRVU03U1VGRFJDeExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrN1VVRkRaQ3hQUVVGUExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wbEJRM3BETEVOQlFVTTdTVUZEUkN4WFFVRlhMRU5CUVVNc1NVRkJTVHRSUVVOYUxFOUJRVThzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03U1VGRE4wTXNRMEZCUXp0SlFVTkVMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNUdFJRVU5pTEU5QlFVOHNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTVUZEZUVNc1EwRkJRenRKUVVORUxGVkJRVlVzUTBGQlF5eEpRVUZKTzFGQlExZ3NUMEZCVHl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExGVkJRVlVzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SlFVTTFReXhEUVVGRE8wbEJRMFFzUzBGQlN5eERRVUZETEZOQlFWTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1QwRkJUenRSUVVONlFpeE5RVUZOTEVsQlFVa3NTMEZCU3l4RFFVRkRMQ3RDUVVFclFpeERRVUZETEVOQlFVTTdTVUZEY2tRc1EwRkJRenRKUVVORUxHRkJRV0VzUTBGQlF5eEpRVUZKTEVWQlFVVXNUMEZCVHp0UlFVTjJRaXhOUVVGTkxFbEJRVWtzUzBGQlN5eERRVUZETEN0Q1FVRXJRaXhEUVVGRExFTkJRVU03U1VGRGNrUXNRMEZCUXp0RFFVTktPMEZCZGtWRUxHZEVRWFZGUXlKOSJdfQ==